import"./style-CkDHoPGJ.js";import{C as l}from"./cpf-validator-B4PsRAE6.js";class i{static parseURLParams(){const a=new URLSearchParams(window.location.search),e={},t={nome:"nome_completo",name:"nome_completo",cpf:"cpf",email:"email",telefone:"telefone",phone:"telefone",endereco:"endereco",address:"endereco",valor:"valor_total",amount:"valor_total",payment:"meio_pagamento",pagamento:"meio_pagamento"};for(const[o,r]of Object.entries(t)){const n=a.get(o);n&&(e[r]=decodeURIComponent(n))}return e.order_bumps=this.extractOrderBumps(a),e.origem="vega",e.data_compra=new Date().toISOString(),e.produtos=[{nome:"Kit 12 caixas organizadoras + brinde",preco:e.valor_total||0,imagem:"/traduza-have-you-propose copy.png"}],e}static extractOrderBumps(a){const e=[];return[{id:"bump1",nome:"Pague em Até 5 Minutos e Ganhe Mais 3 Caixas Organizadoras",preco:0,imagem:"/traduza-have-you-propose copy.png",params:["bump1","bonus_caixas","extra_caixas"]},{id:"bump2",nome:"Leve Mais 8 Caixas Pela Metade do Preço",preco:39.9,imagem:"/traduza-have-you-propose copy.png",params:["bump2","caixas_extras","mais_caixas"]},{id:"bump3",nome:"Kit de 6 Potes Herméticos",preco:29.9,imagem:"/traduza-have-you-propose copy.png",params:["bump3","potes","hermeticos"]}].forEach(o=>{o.params.some(n=>{const c=a.get(n);return c&&(c==="1"||c==="true"||c==="yes")})&&e.push(o)}),e}static generateMockVegaData(a){const e=["João Silva Santos","Maria Oliveira Costa","Pedro Souza Lima","Ana Paula Ferreira","Carlos Eduardo Alves","Fernanda Santos Rocha"],t=["joao.silva@email.com","maria.costa@email.com","pedro.lima@email.com","ana.ferreira@email.com","carlos.alves@email.com","fernanda.rocha@email.com"],o=["Rua das Flores, 123 - Centro - São Paulo/SP - CEP: 01234-567","Av. Paulista, 456 - Bela Vista - São Paulo/SP - CEP: 01310-100","Rua Augusta, 789 - Consolação - São Paulo/SP - CEP: 01305-000"],r=parseInt(a.slice(-2))%e.length;return{nome_completo:e[r],cpf:a,email:t[r],telefone:`(11) 9${a.slice(-8)}`,endereco:o[r%o.length],valor_total:67.9,meio_pagamento:"PIX",origem:"vega",data_compra:new Date().toISOString(),produtos:[{nome:"Kit 12 caixas organizadoras + brinde",preco:67.9,imagem:"/traduza-have-you-propose copy.png"}],order_bumps:[{id:"bump2",nome:"Leve Mais 8 Caixas Pela Metade do Preço",preco:39.9,imagem:"/traduza-have-you-propose copy.png"}]}}static isVegaOrigin(){const a=new URLSearchParams(window.location.search);return a.get("origem")==="vega"||a.has("nome")||a.has("name")||a.has("vega")}}console.warn("⚠️ Variáveis do Supabase não configuradas. Usando modo fallback.");const s=null,u=()=>s!==null;class m{constructor(){this.isConfigured=u(),this.isConfigured||console.warn("⚠️ Supabase não configurado. Usando armazenamento local como fallback.")}async createLead(a){if(!this.isConfigured)return this.createLeadFallback(a);try{const{data:e,error:t}=await s.from("leads").insert([a]).select().single();return t?(console.error("Erro ao criar lead:",t),this.createLeadFallback(a)):(console.log("✅ Lead criado no Supabase:",e),{success:!0,data:e})}catch(e){return console.error("Erro na criação do lead:",e),this.createLeadFallback(a)}}async getLeadByCPF(a){if(!this.isConfigured)return this.getLeadByCPFFallback(a);try{const{data:e,error:t}=await s.from("leads").select("*").eq("cpf",a.replace(/[^\d]/g,"")).single();return t&&t.code!=="PGRST116"?(console.error("Erro ao buscar lead:",t),this.getLeadByCPFFallback(a)):{success:!0,data:e||null}}catch(e){return console.error("Erro na busca do lead:",e),this.getLeadByCPFFallback(a)}}async updateLeadStage(a,e){if(!this.isConfigured)return this.updateLeadStageFallback(a,e);try{const{data:t,error:o}=await s.from("leads").update({etapa_atual:e}).eq("cpf",a.replace(/[^\d]/g,"")).select().single();return o?(console.error("Erro ao atualizar etapa:",o),this.updateLeadStageFallback(a,e)):(console.log("✅ Etapa atualizada no Supabase:",t),{success:!0,data:t})}catch(t){return console.error("Erro na atualização da etapa:",t),this.updateLeadStageFallback(a,e)}}async updatePaymentStatus(a,e){if(!this.isConfigured)return this.updatePaymentStatusFallback(a,e);try{const{data:t,error:o}=await s.from("leads").update({status_pagamento:e}).eq("cpf",a.replace(/[^\d]/g,"")).select().single();return o?(console.error("Erro ao atualizar status de pagamento:",o),this.updatePaymentStatusFallback(a,e)):(console.log("✅ Status de pagamento atualizado no Supabase:",t),{success:!0,data:t})}catch(t){return console.error("Erro na atualização do status de pagamento:",t),this.updatePaymentStatusFallback(a,e)}}createLeadFallback(a){try{const e=JSON.parse(localStorage.getItem("leads")||"[]"),t={...a,id:Date.now().toString(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return e.push(t),localStorage.setItem("leads",JSON.stringify(e)),console.log("✅ Lead criado no localStorage:",t),{success:!0,data:t}}catch(e){return console.error("Erro no fallback de criação:",e),{success:!1,error:e.message}}}getLeadByCPFFallback(a){try{return{success:!0,data:JSON.parse(localStorage.getItem("leads")||"[]").find(o=>o.cpf===a.replace(/[^\d]/g,""))||null}}catch(e){return console.error("Erro no fallback de busca:",e),{success:!1,error:e.message}}}updateLeadStageFallback(a,e){try{const t=JSON.parse(localStorage.getItem("leads")||"[]"),o=t.findIndex(r=>r.cpf===a.replace(/[^\d]/g,""));return o!==-1?(t[o].etapa_atual=e,t[o].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(t)),console.log("✅ Etapa atualizada no localStorage:",t[o]),{success:!0,data:t[o]}):{success:!1,error:"Lead não encontrado"}}catch(t){return console.error("Erro no fallback de atualização:",t),{success:!1,error:t.message}}}updatePaymentStatusFallback(a,e){try{const t=JSON.parse(localStorage.getItem("leads")||"[]"),o=t.findIndex(r=>r.cpf===a.replace(/[^\d]/g,""));return o!==-1?(t[o].status_pagamento=e,t[o].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(t)),console.log("✅ Status de pagamento atualizado no localStorage:",t[o]),{success:!0,data:t[o]}):{success:!1,error:"Lead não encontrado"}}catch(t){return console.error("Erro no fallback de atualização de pagamento:",t),{success:!1,error:t.message}}}}class p{constructor(){this.dbService=new m,this.vegaData=null,this.init()}async init(){console.log("🎉 Inicializando página de Obrigado");try{await this.processVegaData(),this.displayOrderData(),this.setupTrackingButton(),console.log("✅ Página de Obrigado inicializada com sucesso")}catch(a){console.error("❌ Erro na inicialização da página de Obrigado:",a),this.showError("Erro ao carregar dados do pedido")}}async processVegaData(){if(i.isVegaOrigin())console.log("📦 Processando dados do Vega Checkout"),this.vegaData=i.parseURLParams();else{const e=new URLSearchParams(window.location.search).get("cpf");if(e){console.log("🔍 Buscando dados existentes para CPF:",e);const t=await this.dbService.getLeadByCPF(e);t.success&&t.data?this.vegaData=t.data:this.vegaData=i.generateMockVegaData(e)}else this.vegaData=i.generateMockVegaData("12345678901")}this.vegaData&&await this.saveLeadData()}async saveLeadData(){try{const a=await this.dbService.getLeadByCPF(this.vegaData.cpf);if(a.success&&a.data)console.log("📝 Lead já existe, atualizando dados");else{console.log("📝 Criando novo lead no banco de dados");const e=await this.dbService.createLead(this.vegaData);e.success?console.log("✅ Lead salvo com sucesso"):console.warn("⚠️ Erro ao salvar lead:",e.error)}}catch(a){console.error("❌ Erro ao salvar dados do lead:",a)}}displayOrderData(){if(!this.vegaData){this.showError("Dados do pedido não encontrados");return}this.updateElement("customerName",this.vegaData.nome_completo),this.updateElement("customerCPF",l.formatCPF(this.vegaData.cpf)),this.updateElement("customerEmail",this.vegaData.email||"Não informado"),this.updateElement("customerPhone",this.vegaData.telefone||"Não informado"),this.updateElement("customerAddress",this.vegaData.endereco||"Não informado"),this.updateElement("totalValue",this.formatCurrency(this.vegaData.valor_total)),this.updateElement("paymentMethod",this.vegaData.meio_pagamento||"PIX"),this.updateElement("purchaseDate",this.formatDate(this.vegaData.data_compra)),this.displayProducts()}displayProducts(){const a=document.getElementById("productsList");if(!a)return;a.innerHTML="";const e={nome:"Kit 12 caixas organizadoras + brinde",preco:this.vegaData.valor_total||67.9,imagem:"/traduza-have-you-propose copy.png"};a.appendChild(this.createProductElement(e,!0)),this.vegaData.order_bumps&&this.vegaData.order_bumps.length>0&&this.vegaData.order_bumps.forEach(t=>{a.appendChild(this.createProductElement(t,!1))})}createProductElement(a,e=!1){const t=document.createElement("div");return t.className=`product-item ${e?"main-product":"order-bump"}`,t.innerHTML=`
            <div class="product-image">
                <img src="${a.imagem}" alt="${a.nome}" onerror="this.src='/traduza-have-you-propose copy.png'">
            </div>
            <div class="product-details">
                <h4 class="product-name">${a.nome}</h4>
                <div class="product-price">${this.formatCurrency(a.preco)}</div>
                ${e?'<span class="main-badge">Produto Principal</span>':'<span class="bump-badge">Order Bump</span>'}
            </div>
        `,t}setupTrackingButton(){const a=document.getElementById("trackOrderButton");a&&a.addEventListener("click",()=>{if(this.vegaData&&this.vegaData.cpf){const t=`/rastreamento.html?origem=vega&cpf=${this.vegaData.cpf.replace(/[^\d]/g,"")}`;window.location.href=t}else window.location.href="/rastreamento.html"})}updateElement(a,e){const t=document.getElementById(a);t&&(t.textContent=e)}formatCurrency(a){return a?new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(parseFloat(a)):"R$ 0,00"}formatDate(a){return a?new Date(a).toLocaleDateString("pt-BR",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"}):"Data não informada"}showError(a){console.error("❌ Erro:",a),this.updateElement("customerName","Cliente Shopee"),this.updateElement("customerCPF","000.000.000-00"),this.updateElement("customerEmail","cliente@email.com"),this.updateElement("customerPhone","(11) 99999-9999"),this.updateElement("customerAddress","Endereço não informado"),this.updateElement("totalValue","R$ 67,90"),this.updateElement("paymentMethod","PIX"),this.updateElement("purchaseDate",new Date().toLocaleDateString("pt-BR"))}}document.addEventListener("DOMContentLoaded",()=>{new p});
